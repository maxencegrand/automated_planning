(unstack d10 d9)
(put_down d10 c3)
(unstack d9 d8)
(stack d9 d4)
(pick_up d10 c3)
(stack d10 d9)
(unstack d8 d7)
(put_down d8 c3)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d4)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d6)
(stack d7 d4)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d7)
(stack d10 d9)
(pick_up d8 c3)
(stack d8 d7)
(unstack d10 d9)
(put_down d10 c3)
(unstack d9 d6)
(stack d9 d8)
(pick_up d10 c3)
(stack d10 d9)
(unstack d6 d5)
(put_down d6 c3)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d5)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d5)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d4)
(stack d7 d6)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d4)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d5)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d4)
(stack d9 d8)
(unstack d10 d5)
(stack d10 d9)
(pick_up d5 c2)
(stack d5 d4)
(unstack d10 d9)
(put_down d10 c2)
(unstack d9 d8)
(stack d9 d5)
(pick_up d10 c2)
(stack d10 d9)
(unstack d8 d7)
(put_down d8 c2)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d5)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d6)
(stack d7 d5)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d7)
(stack d10 d9)
(pick_up d8 c2)
(stack d8 d7)
(unstack d10 d9)
(put_down d10 c2)
(unstack d9 d6)
(stack d9 d8)
(pick_up d10 c2)
(stack d10 d9)
(pick_up d6 c3)
(put_down d6 c2)
(unstack d10 d9)
(put_down d10 c3)
(unstack d9 d8)
(stack d9 d6)
(pick_up d10 c3)
(stack d10 d9)
(unstack d8 d7)
(put_down d8 c3)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d5)
(stack d7 d6)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d5)
(unstack d10 d7)
(stack d10 d9)
(pick_up d8 c3)
(stack d8 d7)
(unstack d10 d9)
(put_down d10 c3)
(unstack d9 d5)
(stack d9 d8)
(pick_up d10 c3)
(stack d10 d9)
(unstack d5 d4)
(put_down d5 c3)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d8)
(stack d9 d4)
(unstack d10 d5)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d5)
(unstack d10 d9)
(stack d10 d8)
(unstack d9 d4)
(stack d9 d7)
(unstack d10 d8)
(stack d10 d9)
(unstack d8 d5)
(stack d8 d4)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d7)
(stack d9 d8)
(unstack d10 d5)
(stack d10 d9)
(unstack d7 d6)
(stack d7 d5)
(unstack d10 d9)
(stack d10 d6)
(unstack d9 d8)
(stack d9 d7)
(unstack d10 d6)
(stack d10 d9)
(unstack d8 d4)
(stack d8 d6)
(unstack d10 d9)
(stack d10 d8)
(unstack d9 d7)
(stack d9 d4)
(unstack d10 d8)
(stack d10 d7)
(unstack d9 d4)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d5)
(stack d7 d4)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d5)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d6)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d6)
(unstack d9 d5)
(stack d9 d8)
(unstack d10 d6)
(stack d10 d9)
(pick_up d6 c2)
(stack d6 d5)
(unstack d10 d9)
(put_down d10 c2)
(unstack d9 d8)
(stack d9 d6)
(pick_up d10 c2)
(stack d10 d9)
(unstack d8 d7)
(put_down d8 c2)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d4)
(stack d7 d6)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d4)
(unstack d10 d7)
(stack d10 d9)
(pick_up d8 c2)
(stack d8 d7)
(unstack d10 d9)
(put_down d10 c2)
(unstack d9 d4)
(stack d9 d8)
(pick_up d10 c2)
(stack d10 d9)
(unstack d4 d3)
(put_down d4 c2)
(unstack d10 d9)
(stack d10 d3)
(unstack d9 d8)
(stack d9 d4)
(unstack d10 d3)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d3)
(unstack d10 d9)
(stack d10 d8)
(unstack d9 d4)
(stack d9 d7)
(unstack d10 d8)
(stack d10 d4)
(unstack d9 d7)
(stack d9 d8)
(unstack d10 d4)
(stack d10 d9)
(unstack d7 d6)
(stack d7 d4)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d3)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d3)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d3)
(stack d10 d9)
(unstack d6 d5)
(stack d6 d3)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d5)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d5)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d4)
(stack d7 d6)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d4)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d5)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d4)
(stack d9 d8)
(unstack d10 d5)
(stack d10 d9)
(pick_up d5 c3)
(stack d5 d4)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d8)
(put_down d9 c3)
(unstack d10 d5)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d5)
(unstack d10 d9)
(stack d10 d7)
(pick_up d9 c3)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d6)
(put_down d7 c3)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d5)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d5)
(stack d10 d9)
(unstack d6 d3)
(stack d6 d5)
(unstack d10 d9)
(stack d10 d3)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d3)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d3)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(pick_up d7 c3)
(stack d7 d6)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(put_down d9 c3)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d3)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d3)
(pick_up d9 c3)
(stack d9 d8)
(unstack d10 d3)
(stack d10 d9)
(unstack d3 d2)
(put_down d3 c3)
(unstack d10 d9)
(stack d10 d3)
(unstack d9 d8)
(stack d9 d2)
(unstack d10 d3)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d3)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d2)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d6)
(stack d7 d2)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d3)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d3)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d3)
(stack d10 d9)
(unstack d6 d5)
(stack d6 d3)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d5)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d5)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d2)
(stack d7 d6)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d2)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d5)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d2)
(stack d9 d8)
(unstack d10 d5)
(stack d10 d9)
(unstack d5 d4)
(stack d5 d2)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d8)
(stack d9 d4)
(unstack d10 d5)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d5)
(unstack d10 d9)
(stack d10 d8)
(unstack d9 d4)
(stack d9 d7)
(unstack d10 d8)
(stack d10 d4)
(unstack d9 d7)
(stack d9 d8)
(unstack d10 d4)
(stack d10 d9)
(unstack d7 d6)
(stack d7 d4)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d5)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d5)
(stack d10 d9)
(unstack d6 d3)
(stack d6 d5)
(unstack d10 d9)
(stack d10 d3)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d3)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d3)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d4)
(stack d7 d6)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d4)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d3)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d3)
(unstack d9 d4)
(stack d9 d8)
(unstack d10 d3)
(stack d10 d9)
(pick_up d4 c2)
(stack d4 d3)
(unstack d10 d9)
(put_down d10 c2)
(unstack d9 d8)
(stack d9 d4)
(pick_up d10 c2)
(stack d10 d9)
(unstack d8 d7)
(put_down d8 c2)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d4)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d6)
(stack d7 d4)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d7)
(stack d10 d9)
(pick_up d8 c2)
(stack d8 d7)
(unstack d10 d9)
(put_down d10 c2)
(unstack d9 d6)
(stack d9 d8)
(pick_up d10 c2)
(stack d10 d9)
(unstack d6 d5)
(put_down d6 c2)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d5)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d5)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d4)
(stack d7 d6)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d4)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d5)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d4)
(stack d9 d8)
(unstack d10 d5)
(stack d10 d9)
(unstack d5 d2)
(stack d5 d4)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d8)
(stack d9 d2)
(unstack d10 d5)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d5)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d2)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d6)
(stack d7 d2)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d5)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d5)
(stack d10 d9)
(pick_up d6 c2)
(stack d6 d5)
(unstack d10 d9)
(put_down d10 c2)
(unstack d9 d8)
(stack d9 d6)
(pick_up d10 c2)
(stack d10 d9)
(unstack d8 d7)
(put_down d8 c2)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d2)
(stack d7 d6)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d2)
(unstack d10 d7)
(stack d10 d9)
(pick_up d8 c2)
(stack d8 d7)
(unstack d10 d9)
(put_down d10 c2)
(unstack d9 d2)
(stack d9 d8)
(pick_up d10 c2)
(stack d10 d9)
(unstack d2 d1)
(put_down d2 c2)
(unstack d10 d9)
(stack d10 d1)
(unstack d9 d8)
(stack d9 d2)
(unstack d10 d1)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d1)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d2)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d6)
(stack d7 d2)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d1)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d1)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d1)
(stack d10 d9)
(unstack d6 d5)
(stack d6 d1)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d5)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d5)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d2)
(stack d7 d6)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d2)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d5)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d2)
(stack d9 d8)
(unstack d10 d5)
(stack d10 d9)
(unstack d5 d4)
(stack d5 d2)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d8)
(stack d9 d4)
(unstack d10 d5)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d5)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d4)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d6)
(stack d7 d4)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d5)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d5)
(stack d10 d9)
(unstack d6 d1)
(stack d6 d5)
(unstack d10 d9)
(stack d10 d6)
(unstack d9 d8)
(stack d9 d1)
(unstack d10 d6)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d6)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d1)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d4)
(stack d7 d1)
(unstack d10 d9)
(stack d10 d4)
(unstack d9 d8)
(stack d9 d7)
(unstack d10 d4)
(stack d10 d9)
(unstack d8 d6)
(stack d8 d4)
(unstack d10 d9)
(stack d10 d6)
(unstack d9 d7)
(stack d9 d8)
(unstack d10 d6)
(stack d10 d9)
(unstack d7 d1)
(stack d7 d6)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d1)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d4)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d4)
(unstack d9 d1)
(stack d9 d8)
(unstack d10 d4)
(stack d10 d9)
(unstack d4 d3)
(stack d4 d1)
(unstack d10 d9)
(stack d10 d3)
(unstack d9 d8)
(stack d9 d4)
(unstack d10 d3)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d3)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d4)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d6)
(stack d7 d4)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d3)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d3)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d3)
(stack d10 d9)
(unstack d6 d5)
(stack d6 d3)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d5)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d5)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d4)
(stack d7 d6)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d4)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d5)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d4)
(stack d9 d8)
(unstack d10 d5)
(stack d10 d9)
(unstack d5 d2)
(stack d5 d4)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d8)
(stack d9 d2)
(unstack d10 d5)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d5)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d2)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d6)
(stack d7 d2)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d5)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d5)
(stack d10 d9)
(unstack d6 d3)
(stack d6 d5)
(unstack d10 d9)
(stack d10 d3)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d3)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d3)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d2)
(stack d7 d6)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d2)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d3)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d3)
(unstack d9 d2)
(stack d9 d8)
(unstack d10 d3)
(stack d10 d9)
(pick_up d3 c3)
(stack d3 d2)
(unstack d10 d9)
(stack d10 d3)
(unstack d9 d8)
(put_down d9 c3)
(unstack d10 d3)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d3)
(unstack d10 d9)
(stack d10 d7)
(pick_up d9 c3)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d6)
(put_down d7 c3)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d3)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d3)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d3)
(stack d10 d9)
(unstack d6 d5)
(stack d6 d3)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d5)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d5)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(pick_up d7 c3)
(stack d7 d6)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(put_down d9 c3)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d5)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d5)
(pick_up d9 c3)
(stack d9 d8)
(unstack d10 d5)
(stack d10 d9)
(unstack d5 d4)
(put_down d5 c3)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d8)
(stack d9 d4)
(unstack d10 d5)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d5)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d4)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d6)
(stack d7 d4)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d5)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d5)
(stack d10 d9)
(unstack d6 d3)
(stack d6 d5)
(unstack d10 d9)
(stack d10 d3)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d3)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d3)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d4)
(stack d7 d6)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d4)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d3)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d3)
(unstack d9 d4)
(stack d9 d8)
(unstack d10 d3)
(stack d10 d9)
(unstack d4 d1)
(stack d4 d3)
(unstack d10 d9)
(stack d10 d1)
(unstack d9 d8)
(stack d9 d4)
(unstack d10 d1)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d1)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d4)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d6)
(stack d7 d4)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d1)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d1)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d1)
(stack d10 d9)
(unstack d6 d5)
(stack d6 d1)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d5)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d5)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d4)
(stack d7 d6)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d4)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d5)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d4)
(stack d9 d8)
(unstack d10 d5)
(stack d10 d9)
(pick_up d5 c3)
(stack d5 d4)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d8)
(put_down d9 c3)
(unstack d10 d5)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d5)
(unstack d10 d9)
(stack d10 d7)
(pick_up d9 c3)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d6)
(put_down d7 c3)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d5)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d5)
(stack d10 d9)
(unstack d6 d1)
(stack d6 d5)
(unstack d10 d9)
(stack d10 d6)
(unstack d9 d8)
(stack d9 d1)
(unstack d10 d6)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d6)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d1)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(pick_up d7 c3)
(stack d7 d1)
(unstack d10 d9)
(put_down d10 c3)
(unstack d9 d8)
(stack d9 d7)
(pick_up d10 c3)
(stack d10 d9)
(unstack d8 d6)
(put_down d8 c3)
(unstack d10 d9)
(stack d10 d6)
(unstack d9 d7)
(stack d9 d8)
(unstack d10 d6)
(stack d10 d9)
(unstack d7 d1)
(stack d7 d6)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d1)
(unstack d10 d7)
(stack d10 d9)
(pick_up d8 c3)
(stack d8 d7)
(unstack d10 d9)
(put_down d10 c3)
(unstack d9 d1)
(stack d9 d8)
(pick_up d10 c3)
(stack d10 d9)
(pick_up d1 c1)
(put_down d1 c3)
(unstack d10 d9)
(stack d10 d1)
(unstack d9 d8)
(put_down d9 c1)
(unstack d10 d1)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d1)
(unstack d10 d9)
(stack d10 d7)
(pick_up d9 c1)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d6)
(put_down d7 c1)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d1)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d1)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d1)
(stack d10 d9)
(unstack d6 d5)
(stack d6 d1)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d5)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d5)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(pick_up d7 c1)
(stack d7 d6)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(put_down d9 c1)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d5)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d5)
(pick_up d9 c1)
(stack d9 d8)
(unstack d10 d5)
(stack d10 d9)
(unstack d5 d4)
(put_down d5 c1)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d8)
(stack d9 d4)
(unstack d10 d5)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d5)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d4)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d6)
(stack d7 d4)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d5)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d5)
(stack d10 d9)
(unstack d6 d1)
(stack d6 d5)
(unstack d10 d9)
(stack d10 d1)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d1)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d1)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d4)
(stack d7 d6)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d4)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d1)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d1)
(unstack d9 d4)
(stack d9 d8)
(unstack d10 d1)
(stack d10 d9)
(unstack d4 d3)
(stack d4 d1)
(unstack d10 d9)
(stack d10 d3)
(unstack d9 d8)
(stack d9 d4)
(unstack d10 d3)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d3)
(unstack d10 d9)
(stack d10 d8)
(unstack d9 d4)
(stack d9 d7)
(unstack d10 d8)
(stack d10 d4)
(unstack d9 d7)
(stack d9 d8)
(unstack d10 d4)
(stack d10 d9)
(unstack d7 d6)
(stack d7 d4)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d3)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d3)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d3)
(stack d10 d9)
(unstack d6 d5)
(stack d6 d3)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d5)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d5)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d4)
(stack d7 d6)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d4)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d5)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d4)
(stack d9 d8)
(unstack d10 d5)
(stack d10 d9)
(pick_up d5 c1)
(stack d5 d4)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d8)
(put_down d9 c1)
(unstack d10 d5)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d5)
(unstack d10 d9)
(stack d10 d7)
(pick_up d9 c1)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d6)
(put_down d7 c1)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d5)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d5)
(stack d10 d9)
(unstack d6 d3)
(stack d6 d5)
(unstack d10 d9)
(stack d10 d3)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d3)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d3)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(pick_up d7 c1)
(stack d7 d6)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(put_down d9 c1)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d3)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d3)
(pick_up d9 c1)
(stack d9 d8)
(unstack d10 d3)
(stack d10 d9)
(unstack d3 d2)
(put_down d3 c1)
(unstack d10 d9)
(stack d10 d3)
(unstack d9 d8)
(stack d9 d2)
(unstack d10 d3)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d3)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d2)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d6)
(stack d7 d2)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d3)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d3)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d3)
(stack d10 d9)
(unstack d6 d5)
(stack d6 d3)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d5)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d5)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d2)
(stack d7 d6)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d2)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d5)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d2)
(stack d9 d8)
(unstack d10 d5)
(stack d10 d9)
(unstack d5 d4)
(stack d5 d2)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d8)
(stack d9 d4)
(unstack d10 d5)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d5)
(unstack d10 d9)
(stack d10 d8)
(unstack d9 d4)
(stack d9 d7)
(unstack d10 d8)
(stack d10 d4)
(unstack d9 d7)
(stack d9 d8)
(unstack d10 d4)
(stack d10 d9)
(unstack d7 d6)
(stack d7 d4)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d5)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d5)
(stack d10 d9)
(unstack d6 d3)
(stack d6 d5)
(unstack d10 d9)
(stack d10 d3)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d3)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d3)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d4)
(stack d7 d6)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d4)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d3)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d3)
(unstack d9 d4)
(stack d9 d8)
(unstack d10 d3)
(stack d10 d9)
(unstack d4 d1)
(stack d4 d3)
(unstack d10 d9)
(stack d10 d1)
(unstack d9 d8)
(stack d9 d4)
(unstack d10 d1)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d1)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d4)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d6)
(stack d7 d4)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d1)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d1)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d1)
(stack d10 d9)
(unstack d6 d5)
(stack d6 d1)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d5)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d5)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d4)
(stack d7 d6)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d4)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d5)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d4)
(stack d9 d8)
(unstack d10 d5)
(stack d10 d9)
(unstack d5 d2)
(stack d5 d4)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d8)
(stack d9 d2)
(unstack d10 d5)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d5)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d2)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d6)
(stack d7 d2)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d5)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d5)
(stack d10 d9)
(unstack d6 d1)
(stack d6 d5)
(unstack d10 d9)
(stack d10 d1)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d1)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d1)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d2)
(stack d7 d6)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d2)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d1)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d1)
(unstack d9 d2)
(stack d9 d8)
(unstack d10 d1)
(stack d10 d9)
(pick_up d2 c2)
(stack d2 d1)
(unstack d10 d9)
(put_down d10 c2)
(unstack d9 d8)
(stack d9 d2)
(pick_up d10 c2)
(stack d10 d9)
(unstack d8 d7)
(put_down d8 c2)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d2)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d6)
(stack d7 d2)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d7)
(stack d10 d9)
(pick_up d8 c2)
(stack d8 d7)
(unstack d10 d9)
(put_down d10 c2)
(unstack d9 d6)
(stack d9 d8)
(pick_up d10 c2)
(stack d10 d9)
(unstack d6 d5)
(put_down d6 c2)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d5)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d5)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d2)
(stack d7 d6)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d2)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d5)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d2)
(stack d9 d8)
(unstack d10 d5)
(stack d10 d9)
(unstack d5 d4)
(stack d5 d2)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d8)
(stack d9 d4)
(unstack d10 d5)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d5)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d4)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d6)
(stack d7 d4)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d5)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d5)
(stack d10 d9)
(pick_up d6 c2)
(stack d6 d5)
(unstack d10 d9)
(put_down d10 c2)
(unstack d9 d8)
(stack d9 d6)
(pick_up d10 c2)
(stack d10 d9)
(unstack d8 d7)
(put_down d8 c2)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d4)
(stack d7 d6)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d4)
(unstack d10 d7)
(stack d10 d9)
(pick_up d8 c2)
(stack d8 d7)
(unstack d10 d9)
(put_down d10 c2)
(unstack d9 d4)
(stack d9 d8)
(pick_up d10 c2)
(stack d10 d9)
(unstack d4 d3)
(put_down d4 c2)
(unstack d10 d9)
(stack d10 d3)
(unstack d9 d8)
(stack d9 d4)
(unstack d10 d3)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d3)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d4)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d6)
(stack d7 d4)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d3)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d3)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d3)
(stack d10 d9)
(unstack d6 d5)
(stack d6 d3)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d5)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d5)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d4)
(stack d7 d6)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d4)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d5)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d4)
(stack d9 d8)
(unstack d10 d5)
(stack d10 d9)
(unstack d5 d2)
(stack d5 d4)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d8)
(stack d9 d2)
(unstack d10 d5)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d5)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d2)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d6)
(stack d7 d2)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d5)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d5)
(stack d10 d9)
(unstack d6 d3)
(stack d6 d5)
(unstack d10 d9)
(stack d10 d6)
(unstack d9 d8)
(stack d9 d3)
(unstack d10 d6)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d6)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d3)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d2)
(stack d7 d3)
(unstack d10 d9)
(stack d10 d2)
(unstack d9 d8)
(stack d9 d7)
(unstack d10 d2)
(stack d10 d9)
(unstack d8 d6)
(stack d8 d2)
(unstack d10 d9)
(stack d10 d6)
(unstack d9 d7)
(stack d9 d8)
(unstack d10 d6)
(stack d10 d9)
(unstack d7 d3)
(stack d7 d6)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d3)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d2)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d2)
(unstack d9 d3)
(stack d9 d8)
(unstack d10 d2)
(stack d10 d9)
(pick_up d3 c1)
(stack d3 d2)
(unstack d10 d9)
(stack d10 d3)
(unstack d9 d8)
(put_down d9 c1)
(unstack d10 d3)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d3)
(unstack d10 d9)
(stack d10 d7)
(pick_up d9 c1)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d6)
(put_down d7 c1)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d3)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d3)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d3)
(stack d10 d9)
(unstack d6 d5)
(stack d6 d3)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d5)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d5)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(pick_up d7 c1)
(stack d7 d6)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(put_down d9 c1)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d5)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d5)
(pick_up d9 c1)
(stack d9 d8)
(unstack d10 d5)
(stack d10 d9)
(unstack d5 d4)
(put_down d5 c1)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d8)
(stack d9 d4)
(unstack d10 d5)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d5)
(unstack d10 d9)
(stack d10 d8)
(unstack d9 d4)
(stack d9 d7)
(unstack d10 d8)
(stack d10 d4)
(unstack d9 d7)
(stack d9 d8)
(unstack d10 d4)
(stack d10 d9)
(unstack d7 d6)
(stack d7 d4)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d5)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d5)
(stack d10 d9)
(unstack d6 d3)
(stack d6 d5)
(unstack d10 d9)
(stack d10 d3)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d3)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d3)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d4)
(stack d7 d6)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d4)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d3)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d3)
(unstack d9 d4)
(stack d9 d8)
(unstack d10 d3)
(stack d10 d9)
(pick_up d4 c2)
(stack d4 d3)
(unstack d10 d9)
(put_down d10 c2)
(unstack d9 d8)
(stack d9 d4)
(pick_up d10 c2)
(stack d10 d9)
(unstack d8 d7)
(put_down d8 c2)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d4)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d6)
(stack d7 d4)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d7)
(stack d10 d9)
(pick_up d8 c2)
(stack d8 d7)
(unstack d10 d9)
(put_down d10 c2)
(unstack d9 d6)
(stack d9 d8)
(pick_up d10 c2)
(stack d10 d9)
(unstack d6 d5)
(put_down d6 c2)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d5)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d5)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d4)
(stack d7 d6)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d4)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d5)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d4)
(stack d9 d8)
(unstack d10 d5)
(stack d10 d9)
(pick_up d5 c1)
(stack d5 d4)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d8)
(put_down d9 c1)
(unstack d10 d5)
(stack d10 d9)
(unstack d8 d7)
(stack d8 d5)
(unstack d10 d9)
(stack d10 d7)
(pick_up d9 c1)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(unstack d7 d6)
(put_down d7 c1)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(stack d9 d6)
(unstack d10 d7)
(stack d10 d9)
(unstack d8 d5)
(stack d8 d7)
(unstack d10 d9)
(stack d10 d5)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d5)
(stack d10 d9)
(pick_up d6 c2)
(stack d6 d5)
(unstack d10 d9)
(put_down d10 c2)
(unstack d9 d8)
(stack d9 d6)
(pick_up d10 c2)
(stack d10 d9)
(unstack d8 d7)
(put_down d8 c2)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d6)
(stack d9 d8)
(unstack d10 d7)
(stack d10 d9)
(pick_up d7 c1)
(stack d7 d6)
(unstack d10 d9)
(stack d10 d7)
(unstack d9 d8)
(put_down d9 c1)
(unstack d10 d7)
(stack d10 d9)
(pick_up d8 c2)
(stack d8 d7)
(unstack d10 d9)
(put_down d10 c2)
(pick_up d9 c1)
(stack d9 d8)
(pick_up d10 c2)
(stack d10 d9)
; cost = 2206 (unit cost)
